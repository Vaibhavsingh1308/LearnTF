name: Terraform Deploy

on:
  push:
    branches:
      - main
      - develop

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    outputs:
      acr_login_server: ${{ steps.acr.outputs.acr_login_server }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: List and print directory
        working-directory: terraform
        run: |
          echo "Current directory:"
          pwd
          echo "Files in directory:"
          ls -la

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file=dev.tfvars -out=tfplan
        env:
          TF_VAR_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_SP_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_SP_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_SP_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_ACR_NAME: nextappacr
          TF_VAR_IMAGE_NAME: next-app
      
      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve -var-file=dev.tfvars


      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          TF_VAR_SP_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_SP_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_SP_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          TF_VAR_ACR_NAME: nextappacr
          TF_VAR_IMAGE_NAME: next-app

      
      - name: Output ACR Info
        id: acr
        working-directory: terraform
        run: |
          echo "acr_login_server=$(terraform output -raw acr_login_server)" >> $GITHUB_OUTPUT
          echo "acr_name=$(terraform output -raw acr_name)" >> $GITHUB_OUTPUT

  
build-and-push-docker:
    name: Build & Push Docker to ACR
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: az acr login --name ${{ needs.terraform.outputs.acr_name }}

      - name: Build Docker Image
        run: |
          docker build -t next-app:latest .
          docker tag next-app:latest ${{ needs.terraform.outputs.acr_login_server }}/next-app:latest

      - name: Push Docker Image to ACR
        run: docker push ${{ needs.terraform.outputs.acr_login_server }}/next-app:latest


