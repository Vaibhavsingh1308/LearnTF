name: DXP-Component-Gallery

on:
  push:
    branches: [ dev, stage ]

jobs:
  build-dev:
    if: github.ref_name == 'dev'
    runs-on: [self-hosted, Dev-Server]
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file for Frontend
        run: |
          echo "$DXP-Component-Gallery_ENV" >> ${{ github.workspace }}/.env
        shell: bash
        env:
          DXP-Component-Gallery_ENV: ${{ secrets.FILE_ENV_DXP-Component-Gallery_DEV }}

      - run: npm install

      - name: Build the project
        run: npm run build --if-present

  deployment-dev:
    if: github.ref_name == 'dev'
    runs-on: [self-hosted, Dev-Server]
    needs: [build-dev]

    steps:
      - name: Deploy
        run: |
          cd /home/ubuntu/DXP-Component-Gallery/actions-runner/_work/module-gallery-react/module-gallery-react
          cp -rf . /home/ubuntu/DXP-Component-Gallery/module-gallery-react
          rm -rf /home/ubuntu/DXP-Component-Gallery/actions-runner/_work/module-gallery-react/module-gallery-react
          cd /home/ubuntu/DXP-Component-Gallery/module-gallery-react
          pm2 reload ecosystem.config.js --only DXP-Component-Gallery-Dev

  build-stage:
    if: github.ref_name == 'stage'
    runs-on: [self-hosted, Stg-Server]
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create .env file for Frontend
        run: |
          echo "$DXP-Component-Gallery_ENV" >> ${{ github.workspace }}/.env
        shell: bash
        env:
          DXP-Component-Gallery_ENV: ${{ secrets.FILE_ENV_DXP-Component-Gallery_STAGE }}

      - run: npm install

      - name: Build the project
        run: npm run build --if-present

  deployment-stage:
    if: github.ref_name == 'stage'
    runs-on: [self-hosted, Stg-Server]
    needs: [build-stage]

    steps:
      - name: Deploy
        run: |
          cd /home/node22/DXP-Component-Gallery/actions-runner/_work/module-gallery-react/module-gallery-react
          cp -rf . /home/node22/DXP-Component-Gallery/module-gallery-react
          rm -rf /home/node22/DXP-Component-Gallery/actions-runner/_work/module-gallery-react/module-gallery-react
          cd /home/node22/DXP-Component-Gallery/module-gallery-react
          pm2 reload ecosystem.config.js --only DXP-Component-Gallery-Stage
